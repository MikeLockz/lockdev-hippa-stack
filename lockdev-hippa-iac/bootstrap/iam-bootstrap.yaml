AWSTemplateFormatVersion: '2010-09-09'
Description: 'HIPAA Infrastructure IAM Bootstrap - Creates IAM users and policies for Pulumi deployment'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, test, staging, prod]
    Description: Environment name for resource naming

  ProjectName:
    Type: String
    Default: hipaa
    Description: Project name for resource naming

Resources:
  # IAM Management User
  IAMManagerUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub '${ProjectName}-iam-manager-${Environment}'
      Path: /
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: IAM-Management

  # IAM Manager Access Keys
  IAMManagerAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref IAMManagerUser

  # IAM Management Policy
  IAMManagerPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub '${ProjectName}-iam-manager-policy-${Environment}'
      Description: 'Minimal IAM permissions for Pulumi IAM resource management'
      Users:
        - !Ref IAMManagerUser
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: IAMRoleManagement
            Effect: Allow
            Action:
              - iam:CreateRole
              - iam:DeleteRole
              - iam:GetRole
              - iam:ListRoles
              - iam:UpdateRole
              - iam:TagRole
              - iam:UntagRole
              - iam:PutRolePolicy
              - iam:DeleteRolePolicy
              - iam:GetRolePolicy
              - iam:ListRolePolicies
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/${ProjectName}-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*ecs*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*cloudtrail*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*config*'
          - Sid: IAMPolicyManagement
            Effect: Allow
            Action:
              - iam:CreatePolicy
              - iam:DeletePolicy
              - iam:GetPolicy
              - iam:GetPolicyVersion
              - iam:ListPolicies
              - iam:ListPolicyVersions
              - iam:AttachRolePolicy
              - iam:DetachRolePolicy
              - iam:ListAttachedRolePolicies
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/${ProjectName}-*'
              - 'arn:aws:iam::aws:policy/*'
          - Sid: PassRoleForServices
            Effect: Allow
            Action: iam:PassRole
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/${ProjectName}-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*ecs*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*cloudtrail*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*config*'
            Condition:
              StringEquals:
                'iam:PassedToService':
                  - ecs-tasks.amazonaws.com
                  - cloudtrail.amazonaws.com
                  - config.amazonaws.com
          - Sid: ReadOnlyAccess
            Effect: Allow
            Action:
              - iam:GetUser
              - iam:ListUsers
              - iam:GetAccountSummary
            Resource: '*'

  # Infrastructure Deployment Policy
  InfrastructurePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub '${ProjectName}-infrastructure-policy-${Environment}'
      Description: 'Infrastructure permissions for Pulumi (no IAM creation)'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: EC2FullAccess
            Effect: Allow
            Action: ec2:*
            Resource: '*'
          - Sid: S3FullAccess
            Effect: Allow
            Action: s3:*
            Resource: '*'
          - Sid: RDSFullAccess
            Effect: Allow
            Action: rds:*
            Resource: '*'
          - Sid: ECSFullAccess
            Effect: Allow
            Action:
              - ecs:*
              - ecr:*
            Resource: '*'
          - Sid: LoadBalancerAccess
            Effect: Allow
            Action: elasticloadbalancing:*
            Resource: '*'
          - Sid: CloudWatchAccess
            Effect: Allow
            Action:
              - cloudwatch:*
              - logs:*
            Resource: '*'
          - Sid: KMSAccess
            Effect: Allow
            Action: kms:*
            Resource: '*'
          - Sid: CloudTrailAccess
            Effect: Allow
            Action: cloudtrail:*
            Resource: '*'
          - Sid: ConfigAccess
            Effect: Allow
            Action: config:*
            Resource: '*'
          - Sid: GuardDutyAccess
            Effect: Allow
            Action: guardduty:*
            Resource: '*'
          - Sid: SNSAccess
            Effect: Allow
            Action: sns:*
            Resource: '*'
          - Sid: EventsAccess
            Effect: Allow
            Action: events:*
            Resource: '*'
          - Sid: SecretsManagerAccess
            Effect: Allow
            Action: secretsmanager:*
            Resource: '*'
          - Sid: UseExistingRoles
            Effect: Allow
            Action:
              - iam:GetRole
              - iam:ListRoles
              - iam:ListAttachedRolePolicies
              - iam:GetRolePolicy
              - iam:ListRolePolicies
              - iam:PassRole
            Resource: '*'

  # Store IAM Manager credentials in Secrets Manager
  IAMManagerCredentials:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${ProjectName}/${Environment}/iam-manager/credentials'
      Description: 'IAM Manager user credentials for Pulumi deployment'
      SecretString: !Sub |
        {
          "AccessKeyId": "${IAMManagerAccessKey}",
          "SecretAccessKey": "${IAMManagerAccessKey.SecretAccessKey}",
          "UserName": "${IAMManagerUser}"
        }
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: Automation

Outputs:
  IAMManagerUserName:
    Description: 'IAM Manager user name'
    Value: !Ref IAMManagerUser
    Export:
      Name: !Sub '${AWS::StackName}-IAMManagerUser'

  IAMManagerAccessKeyId:
    Description: 'IAM Manager access key ID'
    Value: !Ref IAMManagerAccessKey
    Export:
      Name: !Sub '${AWS::StackName}-IAMManagerAccessKeyId'

  IAMManagerPolicyArn:
    Description: 'IAM Manager policy ARN'
    Value: !Ref IAMManagerPolicy
    Export:
      Name: !Sub '${AWS::StackName}-IAMManagerPolicy'

  InfrastructurePolicyArn:
    Description: 'Infrastructure policy ARN'
    Value: !Ref InfrastructurePolicy
    Export:
      Name: !Sub '${AWS::StackName}-InfrastructurePolicy'

  SecretsManagerArn:
    Description: 'Secrets Manager ARN for IAM Manager credentials'
    Value: !Ref IAMManagerCredentials
    Export:
      Name: !Sub '${AWS::StackName}-IAMCredentials'